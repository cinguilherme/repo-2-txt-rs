name: Cross-Platform Release

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: repo-2-text-rs-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/repo-2-text-rs

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get commit message
        id: commit_msg
        run: echo "MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Create Release
        if: contains(steps.commit_msg.outputs.MESSAGE, 'release')
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v0.1.0"
          release_name: "repo-2-text-rs Release"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Artifacts
        if: contains(steps.commit_msg.outputs.MESSAGE, 'release')
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload Assets
        if: contains(steps.commit_msg.outputs.MESSAGE, 'release')
        run: |
          for asset in artifacts/*; do
            name=$(basename "$asset")
            echo "Uploading $name"
            curl -s \
              -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$asset" \
              "${{ steps.create_release.outputs.upload_url }}?name=$name"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}